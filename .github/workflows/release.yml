name: Build and Release Dynamic Toolbox

on:
  push:
    tags:
      - 'v*.*.*'  # Triggers on version tags like v2.0.0
  workflow_dispatch:  # Allows manual triggering

jobs:
  build-and-release:
    runs-on: macos-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Xcode
      uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: latest-stable
        
    - name: Build Release
      run: |
        # Extract version from tag
        VERSION=${GITHUB_REF#refs/tags/v}
        echo "Building version: $VERSION"
        
        # Build the app
        xcodebuild -project DynamicIsland.xcodeproj \
                   -scheme DynamicIsland \
                   -configuration Release \
                   -archivePath build/DynamicIsland.xcarchive \
                   -destination "generic/platform=macOS" \
                   archive
        
        # Export the app
        mkdir -p build
        cat > build/ExportOptions.plist << EOF
        <?xml version="1.0" encoding="UTF-8"?>
        <!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
        <plist version="1.0">
        <dict>
            <key>method</key>
            <string>mac-application</string>
            <key>destination</key>
            <string>export</string>
        </dict>
        </plist>
        EOF
        
        xcodebuild -exportArchive \
                   -archivePath build/DynamicIsland.xcarchive \
                   -exportPath build \
                   -exportOptionsPlist build/ExportOptions.plist
        
        # Create DMG
        mkdir -p release
        DMG_NAME="Dynamic-Toolbox-v$VERSION"
        
        # Create temporary DMG directory
        mkdir -p build/dmg_temp
        
        # Find and copy the app
        APP_PATH=$(find build -name "*.app" -type d | head -1)
        cp -R "$APP_PATH" build/dmg_temp/
        
        # Rename app for proper display in DMG
        if [ -d "build/dmg_temp/DynamicIsland.app" ]; then
            mv "build/dmg_temp/DynamicIsland.app" "build/dmg_temp/Dynamic Toolbox.app"
        fi
        
        # Create Applications symlink
        ln -sf /Applications build/dmg_temp/Applications
        
        # Create DMG
        hdiutil create -volname "Dynamic Toolbox v$VERSION" \
                       -srcfolder build/dmg_temp \
                       -ov \
                       -format UDZO \
                       "release/$DMG_NAME.dmg"
        
        echo "DMG created: release/$DMG_NAME.dmg"
        
    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        name: "Dynamic Toolbox ${{ github.ref_name }}"
        body: |
          ðŸ§° **Dynamic Toolbox ${{ github.ref_name }}** is here!
          
          ## ðŸš€ What's New
          - Enhanced AI assistant with web search capabilities
          - Improved system monitoring with accurate RAM calculations
          - Beautiful chat history management
          - One-click copy for AI responses
          - Better file handling and smart conversation titles
          
          ## ðŸ“¥ Installation
          1. Download `Dynamic-Toolbox-${{ github.ref_name }}.dmg`
          2. Open the DMG file
          3. Drag "Dynamic Toolbox" to your Applications folder
          4. Launch from Applications and enjoy!
          
          ## ðŸ“‹ Requirements
          - macOS 15.1 (Sequoia) or later
          - Intel or Apple Silicon Mac
          - ~50MB storage space
          - Internet connection (optional, for weather/currency/web search)
          
          ## ðŸ¤– AI Features (Optional)
          - Install [Ollama](https://ollama.ai) for local AI capabilities
          - Recommended model: `llama3.2:3b` (~2GB)
          - Run: `ollama pull llama3.2:3b`
          
          ---
          **Full Changelog**: https://github.com/${{ github.repository }}/compare/v2.0.0...${{ github.ref_name }}
        files: |
          release/*.dmg
          README.md
          Distribution/Installation-Guide.txt
          Distribution/Release-Notes.md
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 